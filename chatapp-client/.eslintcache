[{"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/index.js":"1","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/App.js":"2","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/Channel.js":"3","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/LoginSignup.js":"4","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/MessageContainer.js":"5","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/UserList.js":"6","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/MessageForm.js":"7","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Login.js":"8","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Signup.js":"9","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Message.js":"10","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/User.js":"11","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/adapters/ChannelAdapters.js":"12","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/ContextMenu.js":"13","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Header.js":"14"},{"size":155,"mtime":1609185452352,"results":"15","hashOfConfig":"16"},{"size":471,"mtime":1609017081836,"results":"17","hashOfConfig":"16"},{"size":5876,"mtime":1609334167180,"results":"18","hashOfConfig":"16"},{"size":2251,"mtime":1609017081844,"results":"19","hashOfConfig":"16"},{"size":483,"mtime":1609017129517,"results":"20","hashOfConfig":"16"},{"size":333,"mtime":1609017118177,"results":"21","hashOfConfig":"16"},{"size":919,"mtime":1609333963079,"results":"22","hashOfConfig":"16"},{"size":737,"mtime":1609017081841,"results":"23","hashOfConfig":"16"},{"size":1394,"mtime":1609017081842,"results":"24","hashOfConfig":"16"},{"size":814,"mtime":1609017165876,"results":"25","hashOfConfig":"16"},{"size":208,"mtime":1608748417024,"results":"26","hashOfConfig":"16"},{"size":1475,"mtime":1609334456958,"results":"27","hashOfConfig":"16"},{"size":1105,"mtime":1609329795814,"results":"28","hashOfConfig":"16"},{"size":1390,"mtime":1609334234227,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"16whlsc",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/index.js",[],["61","62"],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/App.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/Channel.js",["63","64"],"import '../component-stylesheets/Channels.scss'\r\nimport React from 'react';\r\nimport UserList from './UserList';\r\nimport MessageContainer from './MessageContainer';\r\nimport MessageForm from '../components/MessageForm';\r\nimport ContextMenu from '../components/ContextMenu';\r\nimport Header from '../components/Header';\r\nimport ActionCable, { ActionCable as ac} from 'actioncable';\r\nimport ChannelAdapters from '../adapters/ChannelAdapters';\r\n\r\nconst cable = ActionCable.createConsumer('ws://localhost:3001/cable')\r\n\r\nclass Channel extends React.Component {\r\n  state = {\r\n    messages: [],\r\n    users: [],\r\n    displayContextMenu: false,\r\n    messageClicked: {\r\n      content: undefined\r\n    },\r\n    messageEvent: {},\r\n    editMode: false,\r\n  }\r\n\r\n  channelId = this.props.match.params.id;\r\n  user = {};\r\n  channelOwner = {};\r\n  channel = {};\r\n\r\n  componentDidMount(){\r\n    this.fetchChannel(this.channelId);\r\n    this.fetchUser();\r\n    this.createSubscription();\r\n    document.onclick = this.hideContextMenu;\r\n  }\r\n\r\n\r\n  fixChat = () => {\r\n    const chatbox = document.querySelector(\".chatbox__messages\");\r\n    chatbox.scrollTop = chatbox.scrollHeight;\r\n  }\r\n\r\n  fetchUser = () => {\r\n    ChannelAdapters.fetchUser()\r\n    .then(response => response.json())\r\n    .then(user=>{\r\n      this.user = user\r\n    });\r\n  }\r\n\r\n  fetchChannel = id => {\r\n    ChannelAdapters.fetchChannel(id)\r\n    .then(resp => resp.json())\r\n    .then(channelObj => {\r\n      this.channelOwner = channelObj.channel_owner;\r\n      this.channel = channelObj;\r\n      const messages = channelObj.messages.sort((a,b) =>  new Date(a.created_at) - new Date(b.created_at));\r\n      this.setState({\r\n        messages,\r\n        users: [...channelObj.users, channelObj.channel_owner],\r\n      })\r\n    })\r\n  }\r\n\r\n  formSubmit = (e, content) => {\r\n    e.preventDefault();\r\n    const editMode = this.state.editMode;\r\n    const messageClicked = this.state.messageClicked;\r\n\r\n    if (editMode){\r\n      this.setState({editMode: false})\r\n      messageClicked.content = content\r\n      this.editMessage(messageClicked);\r\n    }else {\r\n      this.createNewMessage(e);\r\n    }\r\n  }\r\n\r\n  createSubscription = () => {\r\n    cable.subscriptions.create(\r\n      { channel: 'MessagesChannel',\r\n        channel_id: this.channelId,\r\n     },\r\n      { received: messages => this.renderChangesInMessages(messages) }\r\n    )\r\n  }\r\n\r\n  renderChangesInMessages = (messages) => {\r\n    const oldMessages = this.state.messages;\r\n    messages = JSON.parse(messages);\r\n    messages = messages.sort((a,b) =>  new Date(a.created_at) - new Date(b.created_at));\r\n    this.setState({messages});\r\n    if(oldMessages.length < messages.length){this.fixChat()};\r\n  }\r\n\r\n  createNewMessage = (e) => {\r\n    const message = {\r\n      content: e.target.elements[0].value,\r\n      user_id: this.user.id,\r\n      channel_id: this.channelId\r\n    }\r\n    e.target.reset();\r\n    ChannelAdapters.createMessage(message)\r\n  }\r\n\r\n  deleteMessage = (message) => {\r\n    ChannelAdapters.deleteMessage(message)\r\n  }\r\n\r\n  switchFormMode = (mode) => {\r\n    this.setState({editMode: mode});\r\n  }\r\n\r\n  editMessage = (message) => {\r\n    ChannelAdapters.editMessage(message)\r\n  }\r\n\r\n  changeDisplayContextMenu = (e, message) => {\r\n    const contextMenu = document.querySelector(\"#contextMenu\");\r\n    e.preventDefault();\r\n    if (this.isPermitted(message)){\r\n        this.setState({\r\n          messageClicked: message,\r\n          messageEvent: e\r\n        })\r\n        if(contextMenu){\r\n          this.positionContextMenu(e);\r\n        }else{\r\n          this.displayContextMenu();\r\n        }\r\n    }\r\n  }\r\n\r\n  displayContextMenu = () => {\r\n    const contextMenu = document.querySelector(\"#contextMenu\");\r\n    this.setState({displayContextMenu: true});\r\n  }\r\n\r\n  hideContextMenu = () => {\r\n    const contextMenu = document.querySelector(\"#contextMenu\");\r\n    this.setState({displayContextMenu: false});\r\n  }\r\n\r\n  isPermitted = (message = {}) => {\r\n    const channelOwner = this.channelOwner;\r\n    const currentUser = this.user;\r\n    const messageUser = message.user;\r\n    if (messageUser.id === currentUser.id || currentUser.id === channelOwner.id){\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  isOwner = () => {\r\n    return this.user.id === this.channelOwner.id\r\n  }\r\n\r\n  positionContextMenu = (messageEvent = this.state.messageEvent) => {\r\n    const contextMenu = document.querySelector(\"#contextMenu\");\r\n    contextMenu.style.display = \"block\";\r\n    contextMenu.style.left = messageEvent.pageX + \"px\";\r\n    contextMenu.style.top = messageEvent.pageY + \"px\";\r\n\r\n  }\r\n\r\n  render() {\r\n    const displayContextMenu = this.state.displayContextMenu;\r\n    return(\r\n      <>\r\n      <ac\r\n        channel={{\r\n          channel: 'MessagesChannel',\r\n          channel_id: this.channelId,\r\n       }}\r\n      />\r\n\r\n      <div className='container' ng-cloak=\"true\" ng-app=\"chatApp\">\r\n\r\n        <Header\r\n          channelOwner={this.channelOwner}\r\n          isOwner={this.isOwner}\r\n          channelId={this.channelId}\r\n          channel={this.channel}\r\n        />\r\n\r\n        <div className='chatbox' ng-controller=\"MessageCtrl as chatMessage\">\r\n          <UserList users={this.state.users} />\r\n          <MessageContainer\r\n            user={this.user}\r\n            messages={this.state.messages}\r\n            changeDisplayContextMenu={this.changeDisplayContextMenu}\r\n          />\r\n        </div>\r\n        <MessageForm\r\n          editMode={this.state.editMode}\r\n          formSubmit={this.formSubmit}\r\n          messageClicked={this.state.messageClicked}\r\n          />\r\n      </div>\r\n      {displayContextMenu ? <ContextMenu\r\n          switchFormMode={this.switchFormMode}\r\n          deleteMessage={this.deleteMessage}\r\n          messageClicked={this.state.messageClicked}\r\n          positionContextMenu={this.positionContextMenu}\r\n        /> : null}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Channel;\r\n","/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/LoginSignup.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/MessageContainer.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/containers/UserList.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/MessageForm.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Login.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Signup.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Message.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/User.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/adapters/ChannelAdapters.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/ContextMenu.js",[],"/mnt/c/Users/Elijah/dev/projects/chatapp/chatapp-client/src/components/Header.js",["65"],"import {Form} from 'semantic-ui-react'\r\nimport React from 'react'\r\nimport ChannelAdapters from '../adapters/ChannelAdapters';\r\n\r\nclass Header extends React.Component {\r\n\r\n  state = {\r\n    formState: false,\r\n    chatName: \"\",\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    if(this.state.chatName === \"\"){\r\n      const channelOwner = this.props.channelOwner.username\r\n      this.setState({chatName: this.props.channel.name})\r\n    }\r\n  }\r\n\r\n  changeFormState = (e) => {\r\n    if(this.props.isOwner()){\r\n      this.setState({formState: true})\r\n    }\r\n  }\r\n\r\n  changeHeaderState = (e) => {\r\n    this.setState({formState: false});\r\n  }\r\n\r\n  updateChatName = (e) => {\r\n    const chatName = e.target.firstChild.firstChild.value\r\n    this.setState({chatName});\r\n    this.changeHeaderState();\r\n\r\n    const channel = {\r\n      id: this.props.channelId,\r\n      chatName\r\n    }\r\n    ChannelAdapters.editChatName(channel)\r\n    .then(resp => resp.json())\r\n    .then(console.log)\r\n  }\r\n\r\n  render () {\r\n    return(\r\n      <div onClick={this.changeFormState} className = \"chatText\">\r\n          { this.state.formState ?\r\n              <Form onSubmit={this.updateChatName}>\r\n                <Form.Field>\r\n                  <input />\r\n                </Form.Field>\r\n              </Form>\r\n              :\r\n              <h1>{this.state.chatName}</h1>\r\n          }\r\n      </div>\r\n    )\r\n  }\r\n  }\r\n\r\nexport default Header;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":135,"column":11,"nodeType":"72","messageId":"73","endLine":135,"endColumn":22},{"ruleId":"70","severity":1,"message":"71","line":140,"column":11,"nodeType":"72","messageId":"73","endLine":140,"endColumn":22},{"ruleId":"70","severity":1,"message":"74","line":14,"column":13,"nodeType":"72","messageId":"73","endLine":14,"endColumn":25},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'contextMenu' is assigned a value but never used.","Identifier","unusedVar","'channelOwner' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]